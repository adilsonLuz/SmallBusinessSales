/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projeto.view;

import br.com.projeto.Resources.Helpers;
import br.com.projeto.dao.ProdutosDAO;
import br.com.projeto.dao.FornecedoresDAO;
import br.com.projeto.model.Produtos;
import br.com.projeto.model.Fornecedores;
import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import net.sourceforge.barbecue.Barcode;
import net.sourceforge.barbecue.BarcodeException;
import net.sourceforge.barbecue.BarcodeFactory;

/**
 *
 * @author Adilson
 */
public class FrmProdutos extends javax.swing.JFrame {

    private File imagem;

    //Método listar na tabela
    public void listar() {
        ProdutosDAO dao = new ProdutosDAO();
        List<Produtos> lista = dao.listarProdutos();
        DefaultTableModel dados = (DefaultTableModel) tabelaProdutos.getModel();
        dados.setNumRows(0);
        for (Produtos p : lista) {
            dados.addRow(new Object[]{
                p.getId(),
                p.getStatus(),
                p.getNomeProd(),
                p.getDescricao(),
                p.getQtd(),
                p.getEstoqueMin(),
                p.getEstoqueMax(),
                p.getFornecedor().getNome(),
                p.getPrecoComprar(),
                p.getPrecoVender(),
                p.getFator(),
                p.getCodBarras(),
                p.getDataCadastro(),
                p.getImagem()
            });
        }
    }

    /**
     * Creates new form Frmclientes
     */
    public FrmProdutos() {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        setImg("src/imagens/iconVazio.png");
        iconeTela();
        txtCodBarras.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelDados = new javax.swing.JPanel();
        btPesqCaminho = new javax.swing.JButton();
        txtProduto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCod = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtQtd = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cbFornecedores = new javax.swing.JComboBox();
        cbStatus = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtData = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        txtEstoqueMin = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtEstoqueMax = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtCodBarras = new javax.swing.JTextField();
        lbImagem = new javax.swing.JLabel();
        txtPrecoCompra = new javax.swing.JTextField();
        txtPrecoVenda = new javax.swing.JTextField();
        txtPercLucro = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        panelConsulta = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtConsCod = new javax.swing.JTextField();
        btConsnome = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        txtConsProd = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btImprimirCodBarras = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btImprimir = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btGerarEan13 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TELA PRODUTOS");
        setIconImages(null);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cadastro de Produtos");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        panelDados.setBackground(new java.awt.Color(255, 255, 255));

        btPesqCaminho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lupa25x25.png"))); // NOI18N
        btPesqCaminho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesqCaminhoActionPerformed(evt);
            }
        });

        txtProduto.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Produto");

        txtCod.setEditable(false);
        txtCod.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Código");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Descrição");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel8.setText("Qtd Estoque");

        txtQtd.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel14.setText("Fornecedor");

        cbFornecedores.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        cbFornecedores.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cbFornecedoresAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        cbFornecedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbFornecedoresMouseClicked(evt);
            }
        });

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "I - Inativo", "A - Ativo" }));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Status");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setText("Preço Venda");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setText("Preço Compra");

        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane2.setViewportView(txtDescricao);

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel9.setText("Código de Barras");

        txtEstoqueMin.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel10.setText("Estoque Máximo");

        txtEstoqueMax.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel11.setText("Fator de Lucro (%)");

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel12.setText("Estoque Mínimo");

        txtCodBarras.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtCodBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodBarrasKeyReleased(evt);
            }
        });

        txtPrecoCompra.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtPrecoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoCompraActionPerformed(evt);
            }
        });
        txtPrecoCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecoCompraKeyReleased(evt);
            }
        });

        txtPrecoVenda.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtPrecoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecoVendaKeyReleased(evt);
            }
        });

        txtPercLucro.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtPercLucro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPercLucroKeyReleased(evt);
            }
        });

        jLabel13.setText("Data");

        jLabel17.setText("Buscar Foto");

        javax.swing.GroupLayout panelDadosLayout = new javax.swing.GroupLayout(panelDados);
        panelDados.setLayout(panelDadosLayout);
        panelDadosLayout.setHorizontalGroup(
            panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtData, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)))
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(124, 124, 124))
                            .addComponent(txtQtd)))
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtCodBarras, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelDadosLayout.createSequentialGroup()
                                            .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(panelDadosLayout.createSequentialGroup()
                                                    .addComponent(jLabel11)
                                                    .addGap(66, 66, 66))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelDadosLayout.createSequentialGroup()
                                                    .addComponent(txtPercLucro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                            .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel14)
                                                .addComponent(cbFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jLabel7)
                                    .addGroup(panelDadosLayout.createSequentialGroup()
                                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEstoqueMin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12))
                                        .addGap(18, 18, 18)
                                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel10)
                                            .addComponent(txtEstoqueMax, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(49, 49, 49)
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btPesqCaminho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel9)
                            .addComponent(txtPrecoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelDadosLayout.setVerticalGroup(
            panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(cbStatus))
                .addGap(9, 9, 9)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEstoqueMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEstoqueMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPrecoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addGroup(panelDadosLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cbFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPercLucro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDadosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btPesqCaminho))
                    .addComponent(lbImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dados do produto", panelDados);

        panelConsulta.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel15.setText("Cod Barras: ");

        txtConsCod.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtConsCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConsCodKeyPressed(evt);
            }
        });

        btConsnome.setText("Pesquisar");
        btConsnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsnomeActionPerformed(evt);
            }
        });

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "Produto", "", "Estoque", "Min.", "Max.", "", "", "Preço Venda", "", "Cod. Barras", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Byte.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelaProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaProdutos);
        if (tabelaProdutos.getColumnModel().getColumnCount() > 0) {
            tabelaProdutos.getColumnModel().getColumn(0).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(0).setPreferredWidth(25);
            tabelaProdutos.getColumnModel().getColumn(1).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(1).setPreferredWidth(0);
            tabelaProdutos.getColumnModel().getColumn(2).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(2).setPreferredWidth(220);
            tabelaProdutos.getColumnModel().getColumn(3).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(3).setPreferredWidth(0);
            tabelaProdutos.getColumnModel().getColumn(4).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(4).setPreferredWidth(40);
            tabelaProdutos.getColumnModel().getColumn(5).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(5).setPreferredWidth(40);
            tabelaProdutos.getColumnModel().getColumn(6).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(6).setPreferredWidth(40);
            tabelaProdutos.getColumnModel().getColumn(7).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(7).setPreferredWidth(0);
            tabelaProdutos.getColumnModel().getColumn(8).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(8).setPreferredWidth(0);
            tabelaProdutos.getColumnModel().getColumn(9).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(9).setPreferredWidth(70);
            tabelaProdutos.getColumnModel().getColumn(10).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(10).setPreferredWidth(0);
            tabelaProdutos.getColumnModel().getColumn(11).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(11).setPreferredWidth(100);
            tabelaProdutos.getColumnModel().getColumn(12).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(12).setPreferredWidth(0);
            tabelaProdutos.getColumnModel().getColumn(13).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(13).setPreferredWidth(0);
        }

        jLabel16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel16.setText("Produto:");

        txtConsProd.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtConsProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConsProdKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelConsultaLayout = new javax.swing.GroupLayout(panelConsulta);
        panelConsulta.setLayout(panelConsultaLayout);
        panelConsultaLayout.setHorizontalGroup(
            panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
                    .addGroup(panelConsultaLayout.createSequentialGroup()
                        .addGroup(panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelConsultaLayout.createSequentialGroup()
                                .addComponent(txtConsProd, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btConsnome)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(panelConsultaLayout.createSequentialGroup()
                                .addComponent(txtConsCod, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        panelConsultaLayout.setVerticalGroup(
            panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtConsCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtConsProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConsnome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consulta de Produtos", panelConsulta);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btImprimirCodBarras.setText("Imprimir Cod Barra");
        btImprimirCodBarras.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btImprimirCodBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimirCodBarrasActionPerformed(evt);
            }
        });

        btSalvar.setText("SALVAR");
        btSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btEditar.setText("EDITAR");
        btEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btImprimir.setText("IMPRIMIR");
        btImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimirActionPerformed(evt);
            }
        });

        btExcluir.setText("EXCLUIR");
        btExcluir.setAlignmentX(1.0F);
        btExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btLimpar.setText("LIMPAR");
        btLimpar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btGerarEan13.setText("GERAR DIG VERIF");
        btGerarEan13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btGerarEan13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGerarEan13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btSalvar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btImprimir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btExcluir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btImprimirCodBarras))
                    .addComponent(btGerarEan13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btGerarEan13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btImprimirCodBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btImprimirCodBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimirCodBarrasActionPerformed

        try {
            //gerando cópdigo de Barras
            Barcode barcode = BarcodeFactory.createEAN128(txtCodBarras.getText());
            //imprimindo codigo de barras
            PrinterJob printerJob = PrinterJob.getPrinterJob();
            printerJob.setPrintable(barcode);

            if (printerJob.printDialog()) {

                printerJob.print();

            }
        } catch (BarcodeException ex) {
            Logger.getLogger(FrmProdutos.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (PrinterException ex) {
            Logger.getLogger(FrmProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btImprimirCodBarrasActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        try {
            Produtos obj = new Produtos();

            obj.setStatus(cbStatus.getSelectedItem().toString());
            Date agora = new Date();
            SimpleDateFormat dataEUA = new SimpleDateFormat("yyyy-MM-dd");
            String datamysql = dataEUA.format(agora);
            obj.setDataCadastro(datamysql);
            obj.setNomeProd(txtProduto.getText());
            obj.setQtd(Integer.parseInt(txtQtd.getText()));
            obj.setDescricao(txtDescricao.getText());
            obj.setEstoqueMin(Integer.parseInt(txtEstoqueMin.getText()));
            obj.setEstoqueMax(Integer.parseInt(txtEstoqueMax.getText()));
            obj.setPrecoComprar(Double.parseDouble(txtPrecoCompra.getText().replace(',', '.')));
            obj.setPrecoVender(Double.parseDouble(txtPrecoVenda.getText().replace(',', '.')));
            obj.setFator(Double.parseDouble(txtPercLucro.getText().replace(',', '.')));
            //criar um objeto fornecedor
            Fornecedores f = new Fornecedores();
            f = (Fornecedores) cbFornecedores.getSelectedItem();
            obj.setFornecedor(f);
            obj.setCodBarras(txtCodBarras.getText());
            obj.setImagem(getImagem());
            ProdutosDAO dao = new ProdutosDAO();
            dao.cadastrarProdutos(obj);

            new Helpers().limpaTela(panelDados);
            txtDescricao.selectAll();
            txtDescricao.replaceSelection(null);
            setImg("src/imagens/iconVazio.png");

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ops houve o erro.... " + e);
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // Carrega a lista
        listar();
    }//GEN-LAST:event_formWindowActivated

    private void tabelaProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProdutosMouseClicked
        // Pega os Dados
        jTabbedPane1.setSelectedIndex(0);
        txtCod.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 0).toString());
        cbStatus.setSelectedItem(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 1).toString());
        txtProduto.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 2).toString());
        txtDescricao.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 3).toString());
        txtQtd.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 4).toString());
        txtEstoqueMin.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 5).toString());
        txtEstoqueMax.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 6).toString());

        Fornecedores f = new Fornecedores();
        FornecedoresDAO dao = new FornecedoresDAO();
        f = dao.consultarFornecedoresPorNome(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 7).toString());

        cbFornecedores.removeAllItems();
        cbFornecedores.getModel().setSelectedItem(f);

        txtPrecoCompra.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 8).toString());
        txtPrecoVenda.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 9).toString());
        txtPercLucro.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 10).toString());
        txtCodBarras.setText(tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 11).toString());
        try {
            DefaultTableModel model = (DefaultTableModel) tabelaProdutos.getModel();
            int linhaSel = tabelaProdutos.getSelectedRow();
            Date date = new SimpleDateFormat("dd/MM/yyyy").parse((String) model.getValueAt(linhaSel, 12));
            txtData.setDate(date);
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, e);
        }
        Produtos obj = new Produtos();
        lbImagem.setIcon(new ImageIcon(obj.getImagem()));
        
        


    }//GEN-LAST:event_tabelaProdutosMouseClicked

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        // Botão Alterar
        try {
            Produtos obj = new Produtos();

            obj.setStatus(cbStatus.getSelectedItem().toString());
            Date agora = new Date();
            SimpleDateFormat dataEUA = new SimpleDateFormat("yyyy-MM-dd");
            String datamysql = dataEUA.format(agora);
            obj.setDataCadastro(datamysql);
            obj.setNomeProd(txtProduto.getText());
            obj.setQtd(Integer.parseInt(txtQtd.getText()));
            obj.setDescricao(txtDescricao.getText());
            obj.setEstoqueMin(Integer.parseInt(txtEstoqueMin.getText()));
            obj.setEstoqueMax(Integer.parseInt(txtEstoqueMax.getText()));
            obj.setPrecoComprar(Double.parseDouble(txtPrecoCompra.getText().replace(',', '.')));
            obj.setPrecoVender(Double.parseDouble(txtPrecoVenda.getText().replace(',', '.')));
            obj.setFator(Double.parseDouble(txtPercLucro.getText().replace(',', '.')));
            //criar um objeto fornecedor
            Fornecedores f = new Fornecedores();
            f = (Fornecedores) cbFornecedores.getSelectedItem();
            obj.setFornecedor(f);
            obj.setCodBarras(txtCodBarras.getText());
            if(imagem != null) {
                obj.setImagem(getImagem());
            }            
            obj.setId(Integer.parseInt(txtCod.getText()));

            ProdutosDAO dao = new ProdutosDAO();
            dao.alterarProdutos(obj);

            new Helpers().limpaTela(panelDados);
            txtDescricao.selectAll();
            txtDescricao.replaceSelection(null);
            setImg("src/imagens/iconVazio.png");

        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "Ops.. houve o erro " + e);
        }
    }//GEN-LAST:event_btEditarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // Botão Excluir
        int op;
        op = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir?");

        if (op == 0) {
            try {
                Produtos obj = new Produtos();

                obj.setId(Integer.parseInt(txtCod.getText()));

                ProdutosDAO dao = new ProdutosDAO();
                dao.excluirProdutos(obj);

                new Helpers().limpaTela(panelDados);
                txtDescricao.selectAll();
                txtDescricao.replaceSelection(null);
                setImg("src/imagens/iconVazio.png");

            } catch (Exception e) {
                JOptionPane.showConfirmDialog(null, "Ops.. houve o erro " + e);
            }
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btConsnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsnomeActionPerformed
        // Botão pesquisar por nome
        String codBarras = "%" + txtConsProd.getText() + "%";

        ProdutosDAO dao = new ProdutosDAO();
        List<Produtos> lista = dao.buscarProdutosPorNome(codBarras);
        DefaultTableModel dados = (DefaultTableModel) tabelaProdutos.getModel();
        dados.setNumRows(0);
        for (Produtos p : lista) {
            dados.addRow(new Object[]{
                p.getId(),
                p.getStatus(),
                p.getNomeProd(),
                p.getDescricao(),
                p.getQtd(),
                p.getEstoqueMin(),
                p.getEstoqueMax(),
                p.getFornecedor().getNome(),
                p.getPrecoComprar(),
                p.getPrecoVender(),
                p.getFator(),
                p.getCodBarras(),
                p.getDataCadastro(),
                p.getImagem()
            });
        }
    }//GEN-LAST:event_btConsnomeActionPerformed

    private void txtConsCodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsCodKeyPressed
        // Evento que pesquisa conforme digita
        String codBarras = "%" + txtConsCod.getText() + "%";

        ProdutosDAO dao = new ProdutosDAO();
        List<Produtos> lista = dao.buscarProdutosPorCodBarras(codBarras);
        DefaultTableModel dados = (DefaultTableModel) tabelaProdutos.getModel();
        dados.setNumRows(0);
        for (Produtos p : lista) {
            dados.addRow(new Object[]{
                p.getId(),
                p.getStatus(),
                p.getNomeProd(),
                p.getDescricao(),
                p.getQtd(),
                p.getEstoqueMin(),
                p.getEstoqueMax(),
                p.getFornecedor().getNome(),
                p.getPrecoComprar(),
                p.getPrecoVender(),
                p.getFator(),
                p.getCodBarras(),
                p.getDataCadastro(),
                p.getImagem()
            });
        }
    }//GEN-LAST:event_txtConsCodKeyPressed

    private void cbFornecedoresAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbFornecedoresAncestorAdded
        // Carregando combobox fornecedores
        FornecedoresDAO dao = new FornecedoresDAO();

        List<Fornecedores> listadefornecedores = dao.listarFornecedores();

        cbFornecedores.removeAll();
        for (Fornecedores f : listadefornecedores) {
            cbFornecedores.addItem(f);
        }
    }//GEN-LAST:event_cbFornecedoresAncestorAdded

    private void cbFornecedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbFornecedoresMouseClicked
        // TODO add your handling code here:
        FornecedoresDAO dao = new FornecedoresDAO();
        List<Fornecedores> listadefornecedores = dao.listarFornecedores();

        cbFornecedores.removeAll();

        for (Fornecedores f : listadefornecedores) {
            cbFornecedores.addItem(f);
        }
    }//GEN-LAST:event_cbFornecedoresMouseClicked

    private void btImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimirActionPerformed
        MessageFormat header = new MessageFormat("TABELA DE PRODUTOS");
        MessageFormat footer = new MessageFormat("");
        try {
            tabelaProdutos.print(JTable.PrintMode.NORMAL, header, footer);
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Impressão não encontrada", e.getMessage());
        }
    }//GEN-LAST:event_btImprimirActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        new Helpers().limpaTela(panelDados);
        txtDescricao.selectAll();
        txtDescricao.replaceSelection(null);
        setImg("src/imagens/iconVazio.png");
    }//GEN-LAST:event_btLimparActionPerformed

    private void btPesqCaminhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesqCaminhoActionPerformed
        imagem = selecionarImagem();
        abrirImagem(imagem);
    }//GEN-LAST:event_btPesqCaminhoActionPerformed

    private void txtPrecoVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecoVendaKeyReleased
        if (txtPrecoCompra.getText().equals("") || txtPrecoVenda.getText().equals("")) {
            txtPercLucro.setText("");
        } else {
            float precocomprar = Float.parseFloat(txtPrecoCompra.getText().replaceAll(",", "."));
            float precovenda = Float.parseFloat(txtPrecoVenda.getText().replaceAll(",", "."));

            float lucro = ((precovenda - precocomprar) * 100) / precocomprar;

            if(lucro <= 0){
                txtPercLucro.setText("" + lucro);
                txtPercLucro.setForeground(Color.red);
                
            }else{
                txtPercLucro.setText("" + lucro);
                txtPercLucro.setForeground(Color.black);
            }
        }

    }//GEN-LAST:event_txtPrecoVendaKeyReleased

    private void txtPrecoCompraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecoCompraKeyReleased
        if (txtPrecoVenda.getText().equals("") || txtPrecoCompra.getText().equals("")) {
            txtPercLucro.setText("");
        } else {
            float precocomprar = Float.parseFloat(txtPrecoCompra.getText().replaceAll(",", "."));
            float precovenda = Float.parseFloat(txtPrecoVenda.getText().replaceAll(",", "."));

            float lucro = ((precovenda - precocomprar) * 100) / precocomprar;

                if(lucro <= 0){
                txtPercLucro.setText("" + lucro);
                txtPercLucro.setForeground(Color.red);
                
            }else{
                txtPercLucro.setText("" + lucro);
                txtPercLucro.setForeground(Color.black);
            }                    
        }
    }//GEN-LAST:event_txtPrecoCompraKeyReleased

    private void txtPercLucroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPercLucroKeyReleased
        if (txtPrecoCompra.getText().equals("") || txtPercLucro.getText().equals("")) {
            txtPrecoVenda.setText("");
        } else {
            float precocomprar = Float.parseFloat(txtPrecoCompra.getText().replaceAll(",", "."));
            float lucro = Float.parseFloat(txtPercLucro.getText().replaceAll(",", "."));

            float precovenda = ((precocomprar * lucro) / 100) + precocomprar;

            txtPrecoVenda.setText("" + precovenda);
        }
    }//GEN-LAST:event_txtPercLucroKeyReleased

    private void txtCodBarrasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodBarrasKeyReleased
        if (txtCodBarras.getText().length() == 13) {
            if (!txtCodBarras.getText().matches("^[0-9]{13}$")) {
                JOptionPane.showMessageDialog(null, "Digite um codigo de barras valido ( EAN )", "Cadastro de Produto", JOptionPane.WARNING_MESSAGE);
            }
            int[] numeros = txtCodBarras.getText().chars().map(Character::getNumericValue).toArray();
            int somaPares = numeros[1] * 3 + numeros[3] * 3 + numeros[5] * 3 + numeros[7] * 3 + numeros[9] * 3 + numeros[11] * 3;
            int somaImpares = numeros[0] + numeros[2] + numeros[4] + numeros[6] + numeros[8] + numeros[10];
            int resultado = somaImpares + somaPares;
            int digitoVerificador = 10 - resultado % 10;
            if (digitoVerificador != numeros[12]) {
                JOptionPane.showMessageDialog(null, "Digite um codigo de barras valido ( EAN )", "Cadastro de Produto", JOptionPane.WARNING_MESSAGE);
                txtCodBarras.setText("");
            }
        } else if (txtCodBarras.getText().length() > 13) {
            JOptionPane.showMessageDialog(null, "Digite um codigo de barras valido ( EAN )", "Cadastro de Produto", JOptionPane.WARNING_MESSAGE);
            txtCodBarras.setText("");
        }
    }//GEN-LAST:event_txtCodBarrasKeyReleased

    private void btGerarEan13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGerarEan13ActionPerformed

        Helpers ean = new Helpers();

        if (txtCodBarras.getText().length() == 12) {
            if (!txtCodBarras.getText().matches("^[0-9]{12}$")) {
                JOptionPane.showMessageDialog(null, "DIGITE APENAS NÚMEROS!!!", "Gerar Código Valido", JOptionPane.WARNING_MESSAGE);
            }
            ean.gerarCodBar(txtCodBarras.getText());

            txtCodBarras.setText(ean.getEan().toString());

        } else if (txtCodBarras.getText().length() > 12) {
            JOptionPane.showMessageDialog(null, "Digite apenas 12 digitos para criar o código de barras.", "Gerar Código Valido", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btGerarEan13ActionPerformed

    private void txtConsProdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsProdKeyPressed
        // Evento que pesquisa conforme digita
        String codBarras = "%" + txtConsProd.getText() + "%";

        ProdutosDAO dao = new ProdutosDAO();
        List<Produtos> lista = dao.buscarProdutosPorNome(codBarras);
        DefaultTableModel dados = (DefaultTableModel) tabelaProdutos.getModel();
        dados.setNumRows(0);
        for (Produtos p : lista) {
            dados.addRow(new Object[]{
                p.getId(),
                p.getStatus(),
                p.getNomeProd(),
                p.getDescricao(),
                p.getQtd(),
                p.getEstoqueMin(),
                p.getEstoqueMax(),
                p.getFornecedor().getNome(),
                p.getPrecoComprar(),
                p.getPrecoVender(),
                p.getFator(),
                p.getCodBarras(),
                p.getDataCadastro(),
                p.getImagem()
            });
        }
    }//GEN-LAST:event_txtConsProdKeyPressed

    private void txtPrecoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecoCompraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmProdutos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmProdutos().setVisible(true);
            }
        });
    }

    public void setImg(String img) {
        ImageIcon imagem = new ImageIcon(img);
        imagem.setImage(imagem.getImage().getScaledInstance(lbImagem.getWidth(), lbImagem.getHeight(), 1));
        lbImagem.setIcon(imagem);
    }

    private void iconeTela() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imagens/produtos.png")));
    }

    public File selecionarImagem() {
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Imagens em JPEG E PNG", "jpg", "png");
        fileChooser.addChoosableFileFilter(filtro);
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setDialogType(JFileChooser.OPEN_DIALOG);
        fileChooser.setCurrentDirectory(new File("C:"));
        fileChooser.showOpenDialog(this);

        return fileChooser.getSelectedFile();
    }

    public byte[] getImagem() {
        boolean isPng = false;

        if (imagem != null) {
            isPng = imagem.getName().endsWith("png");

            try {
                BufferedImage image = ImageIO.read(imagem);
                ByteArrayOutputStream out = new ByteArrayOutputStream();
                int type = BufferedImage.TYPE_INT_RGB;

                if (isPng) {
                    type = BufferedImage.BITMASK;
                }
                
                BufferedImage novaImagem = new BufferedImage(lbImagem.getWidth(), lbImagem.getHeight(), type);
                Graphics2D g = novaImagem.createGraphics();
                g.setComposite(AlphaComposite.Src);
                g.drawImage(image, 0, 0, lbImagem.getWidth(), lbImagem.getHeight(), null);
                
                if(isPng) {
                    ImageIO.write(novaImagem, "png", out);
                }
                else{
                    ImageIO.write(novaImagem, "jpg", out);
                }
                
                out.flush();
                byte[] byteArray = out. toByteArray();
                out.close();
                
                return byteArray;
                
            } catch (IOException ex) {
                ex.printStackTrace();
            }            
        }
        return null;
    }
    
    public void abrirImagem(Object source) {
        if(source instanceof File) {
            ImageIcon icon = new ImageIcon(imagem.getAbsolutePath());
            icon.setImage(icon.getImage().getScaledInstance(lbImagem.getWidth(), lbImagem.getHeight(), 100));
            lbImagem.setIcon(icon);
        }
        else if(source instanceof byte[]) {
            ImageIcon icon = new ImageIcon(new Produtos().getImagem());
            icon.setImage(icon.getImage().getScaledInstance(lbImagem.getWidth(), lbImagem.getHeight(), 100));
            lbImagem.setIcon(icon);
        }        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConsnome;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btGerarEan13;
    private javax.swing.JButton btImprimir;
    private javax.swing.JButton btImprimirCodBarras;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btPesqCaminho;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cbFornecedores;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbImagem;
    private javax.swing.JPanel panelConsulta;
    private javax.swing.JPanel panelDados;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtCodBarras;
    private javax.swing.JTextField txtConsCod;
    private javax.swing.JTextField txtConsProd;
    private com.toedter.calendar.JDateChooser txtData;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JTextField txtEstoqueMax;
    private javax.swing.JTextField txtEstoqueMin;
    private javax.swing.JTextField txtPercLucro;
    private javax.swing.JTextField txtPrecoCompra;
    private javax.swing.JTextField txtPrecoVenda;
    private javax.swing.JTextField txtProduto;
    private javax.swing.JTextField txtQtd;
    // End of variables declaration//GEN-END:variables
}
